// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using NUnit.Framework;
using System.Diagnostics;

namespace BMICalculator.UI.Tests;

[TestFixture]
public class LoginToAppTest
{
    private IWebDriver driver;
    public IDictionary<string, object> vars { get; private set; }

    private string? environmentUrl;
    private string? userLogin;
    private string? userPasswd;

    private IJavaScriptExecutor js;

    [SetUp]
    public void SetUp()
    {
        var chromeOptions = new ChromeOptions();
        chromeOptions.AddArguments("headless", "no-sandbox", "disable-gpu");

        driver = new ChromeDriver(chromeOptions);
        js = (IJavaScriptExecutor)driver;
        vars = new Dictionary<string, object>();

        environmentUrl = TestContext.Parameters["environmentUrl"];
        userLogin = TestContext.Parameters["user_login"];
        userPasswd = TestContext.Parameters["user_password"];
    }

    [TearDown]
    protected void TearDown()
    {
        driver.Close();
        driver.Quit();
    }
    [Test]
    public void LoginToApp()
    {
        driver.Navigate().GoToUrl(environmentUrl);
        driver.Manage().Window.Size = new System.Drawing.Size(1900, 1030);
        driver.FindElement(By.LinkText("Login")).Click();
        driver.FindElement(By.Id("Input_Email")).SendKeys(userLogin);
        driver.FindElement(By.Id("Input_Password")).SendKeys(userPasswd);
        driver.FindElement(By.Id("login-submit")).Click();
        
        WebDriverWait wait = new WebDriverWait(driver, System.TimeSpan.FromSeconds(30));
        wait.Until(driver => driver.FindElements(By.XPath("//h1[contains(.,\'Welcome\')]")).Count > 0);
        
       
    }
}
